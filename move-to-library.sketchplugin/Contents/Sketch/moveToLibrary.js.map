{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./assets/UI/index.html","webpack://exports/./node_modules/@skpm/events/index.js","webpack://exports/./node_modules/cocoascript-class/lib/index.js","webpack://exports/./node_modules/cocoascript-class/lib/runtime.js","webpack://exports/./node_modules/sketch-module-web-view/lib/browser-api.js","webpack://exports/./node_modules/sketch-module-web-view/lib/constants.js","webpack://exports/./node_modules/sketch-module-web-view/lib/dispatch-first-click.js","webpack://exports/./node_modules/sketch-module-web-view/lib/fitSubview.js","webpack://exports/./node_modules/sketch-module-web-view/lib/index.js","webpack://exports/./node_modules/sketch-module-web-view/lib/parseWebArguments.js","webpack://exports/./node_modules/sketch-module-web-view/lib/webview-api.js","webpack://exports/./src/moveToLibrary.js"],"names":["options","identifier","width","height","frame","minHeight","minWidth","minimizable","maximizable","useContentSize","movable","alwaysOnTop","center","show","browserWindow","moveAllSymbolsToExisitingLibrary","context","libraries","getAllLibraries","getLayoutSettings","document","documentData","localSymbols","moveSelectedSymbolsToExisitingLibrary","selection","moveToLibrary","symbols","library","count","foreignSymbolsInLibraryByName","getSymbolsInDocByName","localSymbolsByName","getIdMap","i","validate","replaceInstance","webContents","executeJavaScript","JSON","stringify","movedSymbolsNumber","movedInstancesNumber","api","message","librariesArray","loadURL","require","LOG","once","on","libraryIndex","Reference","err","url","NSWorkspace","sharedWorkspace","openURL","NSURL","URLWithString","symbol","class","MSSymbolMaster","MSSymbolInstance","copiedSymbols","doc","docSymbols","docSymbolsWithNames","name","idmap","foreignSymbolsByName","key","undefined","objectID","symbolID","foreignSymbol","localSymbolForSymbol_inLibrary","getMatchSymbolInDoc","AddSymbolToDoc","symbolsInDocByName","localDoc","symbolChildren","children","symbolCopy","copy","addSymbolMaster","symbolMaster","childMaster","changeInstanceToSymbol","removeFromParent","frameX","parse","x","frameY","y","setX","setY","addDocToLibraries","saveAndAddLibrary","userLibraries","AppController","sharedInstance","librariesController","librariesNameAndReference","libraryNameAndReference","value","String","label","push","symbolName","librarySymbols","symbolInDoc","addSymbolTolibrary","foriegnSymbol","reattachAllInstance","mapOverrides","symbol1","symbol2","overrideMappingID","overridePoints","Object","assign","mapOverrideWithOverridePoints","overridePoint1","overridePoint2","mapObj","parent","layerID","printIDMaping","fileURL","foreigndocument","locationOnDisk","MSDocument","new","readDocumentFromURL_ofType_error","revertToContentsOfURL_ofType_error","writeToURL_ofType_forSaveOperation_originalContentsURL_error_","NSSaveOperation","nil","Instances","getSymbolInstances","instanceArray","allObjects","getOverrides","updateOverridesWithObjectIDMap","symbolInstances","symbolInstancesBySymbolID","symbolInstancesArray","symbolInstance1","symbolInstance2","overrides","availableOverrides1","availableOverrides","availableOverrides2","getOverridesforOverridePoints","cacheByLayerName1","cacheByLayerName2","layerName","overridePoint","availableOverride1","availableOverride2","isSymbolOverride","symbolOverrides","getOverridesFromSymbolOverride","override1","override2","symbolOverride1","symbolOverride2","MSApplicationMetadata","metadata","appVersion","shareableObjectReference","MSShareableObjectReference","referenceForShareableObject_inLibrary","importedSymbol","importShareableObjectReference_intoDocument","importForeignSymbol_fromLibrary_intoDocument_","debug","log"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,mI;;;;;;;;;;;ACAA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/PA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,6EAA6E,YAAY;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7DA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,kCAAkC,qCAAqC;;AAEvE;AACA;AACA,4CAA4C,sCAAsC,GAAG,YAAY;AACjG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ,YAAY,WAAW;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,8GAA8G,YAAY,GAAG,YAAY,GAAG,aAAa,IAAI,UAAU,WAAW,GAAG;AACrL;AACA,8GAA8G,YAAY,GAAG,YAAY,GAAG,YAAY,IAAI,UAAU,WAAW,GAAG;;AAEpL;AACA,wCAAwC,gCAAgC,E;;;;;;;;;;;ACvGxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACvoBA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR,gBAAgB;AAChB,MAAM,OAAO;AACb,0CAA0C,cAAc;AACxD,MAAM;AACN;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,0EAA0E;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7LA;AAEA,IAAMA,U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","file":"moveToLibrary.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/moveToLibrary.js\");\n","module.exports = \"file://\" + context.plugin.urlForResourceNamed(\"_webpack_resources/aa9b57a9f7368b8439ad6026a27fa864.html\").path();","function EventEmitter () {}\n\n// By default, a maximum of 10 listeners can be registered for any single event.\nEventEmitter.defaultMaxListeners = 10\n\n// Shortcuts to improve speed and size\nvar proto = EventEmitter.prototype\n\nproto._maxListeners = EventEmitter.defaultMaxListeners\n\nfunction indexOfListener (listeners, listener) {\n  var i = listeners.length\n  while (i--) {\n    if (listeners[i].listener === listener) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nfunction alias (name) {\n  return function aliasClosure () {\n    return this[name].apply(this, arguments)\n  }\n}\n\nfunction isValidListener (listener) {\n  if (typeof listener === 'function') {\n    return true\n  } else if (listener && typeof listener === 'object') {\n    return isValidListener(listener.listener)\n  } else {\n    return false\n  }\n}\n\nproto._getListeners = function _getListeners (evt) {\n  var events = this._getEvents()\n\n  return events[evt] || (events[evt] = [])\n}\n\nproto._getEvents = function _getEvents () {\n  return this._events || (this._events = {})\n}\n\n/*\n  Alias for emitter.on(eventName, listener).\n*/\nproto.addListener = alias('on')\n\n/*\n  Synchronously calls each of the listeners registered for the event named eventName, in the order they were registered, passing the supplied arguments to each.\n\n  Returns true if the event had listeners, false otherwise.\n*/\nproto.emit = function emit (evt) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  var listeners = this._getListeners(evt) || []\n  var listener\n  var i\n  var key\n  var response\n\n  for (i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.once === true) {\n      this.removeListener(evt, listener.listener)\n    }\n\n    response = listener.listener.apply(this, args || [])\n  }\n\n  return listeners.length > 0\n}\n\n/*\n  Returns an array listing the events for which the emitter has registered listeners.\n  The values in the array will be strings or Symbols.\n*/\nproto.eventNames = function eventNames () {\n  var events = this._getEvents()\n  return Object.keys(events)\n}\n\n/*\n  Returns the current max listener value for the EventEmitter which is either set by emitter.setMaxListeners(n) or defaults to EventEmitter.defaultMaxListeners.\n*/\nproto.getMaxListeners = function getMaxListeners() {\n  return this._maxListeners\n}\n\n/*\n  Returns the number of listeners listening to the event named eventName.\n*/\nproto.listenerCount = function listenerCount(eventName) {\n  return this._getListeners(eventName).length\n}\n\n/*\n  Returns a copy of the array of listeners for the event named eventName.\n*/\nproto.listeners = function listeners(eventName) {\n  return this._getListeners(eventName).map(function (wrappedListener) {\n    return wrappedListener.listener\n  })\n}\n\n/*\n  Adds the listener function to the end of the listeners array for the event named eventName. No checks are made to see if the listener has already been added. Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n\n  By default, event listeners are invoked in the order they are added. The emitter.prependListener() method can be used as an alternative to add the event listener to the beginning of the listeners array.\n*/\nproto.on = function on (evt, listener) {\n  if (!isValidListener(listener)) {\n    throw new Error('listener must be a function')\n  }\n\n  var listeners = this._getListeners(evt)\n  var listenerIsWrapped = typeof listener === 'object'\n\n  this.emit('newListener', evt, listenerIsWrapped ? listener.listener : listener)\n\n  listeners.push(\n    listenerIsWrapped\n    ? listener\n    : {\n      listener: listener,\n      once: false\n    }\n  )\n\n  return this\n}\n\n/*\n  Adds a one-time listener function for the event named eventName. The next time eventName is triggered, this listener is removed and then invoked.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n\n  By default, event listeners are invoked in the order they are added. The emitter.prependOnceListener() method can be used as an alternative to add the event listener to the beginning of the listeners array.\n*/\nproto.once = function once (evt, listener) {\n  return this.on(evt, {\n    listener: listener,\n    once: true\n  })\n}\n\n/*\n  Adds the listener function to the beginning of the listeners array for the event named eventName. No checks are made to see if the listener has already been added. Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n*/\nproto.prependListener = function prependListener (evt, listener) {\n  if (!isValidListener(listener)) {\n    throw new Error('listener must be a function')\n  }\n\n  var listeners = this._getListeners(evt)\n  var listenerIsWrapped = typeof listener === 'object'\n\n  this.emit('newListener', evt, listenerIsWrapped ? listener.listener : listener)\n\n  listeners.unshift(\n    listenerIsWrapped\n    ? listener\n    : {\n      listener: listener,\n      once: false\n    }\n  )\n\n  return this\n}\n\n/*\n  Adds a one-time listener function for the event named eventName to the beginning of the listeners array. The next time eventName is triggered, this listener is removed, and then invoked.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n*/\nproto.prependOnceListener = function prependOnceListener (evt, listener) {\n  return this.prependListener(evt, {\n    listener: listener,\n    once: true\n  })\n}\n\n/*\n  Removes all listeners, or those of the specified eventName.\n\n  Note that it is bad practice to remove listeners added elsewhere in the code, particularly when the EventEmitter instance was created by some other component or module (e.g. sockets or file streams).\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n*/\nproto.removeAllListeners = function removeAllListeners (evt) {\n  var events = this._getEvents()\n\n  if (typeof evt === 'string') {\n    // Remove all listeners for the specified event\n    delete events[evt]\n  } else {\n    // Remove all listeners in all events\n    delete this._events\n  }\n\n  return this\n}\n\n/*\n  Removes the specified listener from the listener array for the event named eventName.\n\n  removeListener will remove, at most, one instance of a listener from the listener array. If any single listener has been added multiple times to the listener array for the specified eventName, then removeListener must be called multiple times to remove each instance.\n\n  Note that once an event has been emitted, all listeners attached to it at the time of emitting will be called in order. This implies that any removeListener() or removeAllListeners() calls after emitting and before the last listener finishes execution will not remove them from emit() in progress. Subsequent events will behave as expected.\n\n  Because listeners are managed using an internal array, calling this will change the position indices of any listener registered after the listener being removed. This will not impact the order in which listeners are called, but it means that any copies of the listener array as returned by the emitter.listeners() method will need to be recreated.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n*/\nproto.removeListener = function removeListener (evt, listener) {\n  var listeners = this._getListeners(evt)\n\n  var index = indexOfListener(listeners, listener)\n\n  if (index !== -1) {\n    listeners.splice(index, 1)\n\n    this.emit('removeListener', evt, listener)\n  }\n\n  return this\n}\n\n/*\n  By default EventEmitters will print a warning if more than 10 listeners are added for a particular event. This is a useful default that helps finding memory leaks. Obviously, not all events should be limited to just 10 listeners. The emitter.setMaxListeners() method allows the limit to be modified for this specific EventEmitter instance. The value can be set to Infinity (or 0) to indicate an unlimited number of listeners.\n\n  Returns a reference to the EventEmitter, so that calls can be chained.\n*/\nproto.setMaxListeners = function setMaxListeners (n) {\n  this._maxListeners = n\n  return this\n}\n\n/*\n  Returns a copy of the array of listeners for the event named eventName, including any wrappers (such as those created by .once).\n*/\nproto.rawListeners = function rawListeners (evt) {\n  return this._getListeners(evt).slice()\n}\n\nmodule.exports = EventEmitter\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuperCall = undefined;\nexports.default = ObjCClass;\n\nvar _runtime = require(\"./runtime.js\");\n\nexports.SuperCall = _runtime.SuperCall;\n\n// super when returnType is id and args are void\n// id objc_msgSendSuper(struct objc_super *super, SEL op, void)\n\nconst SuperInit = (0, _runtime.SuperCall)(NSStringFromSelector(\"init\"), [], { type: \"@\" });\n\n// Returns a real ObjC class. No need to use new.\nfunction ObjCClass(defn) {\n  const superclass = defn.superclass || NSObject;\n  const className = (defn.className || defn.classname || \"ObjCClass\") + NSUUID.UUID().UUIDString();\n  const reserved = new Set(['className', 'classname', 'superclass']);\n  var cls = MOClassDescription.allocateDescriptionForClassWithName_superclass_(className, superclass);\n  // Add each handler to the class description\n  const ivars = [];\n  for (var key in defn) {\n    const v = defn[key];\n    if (typeof v == 'function' && key !== 'init') {\n      var selector = NSSelectorFromString(key);\n      cls.addInstanceMethodWithSelector_function_(selector, v);\n    } else if (!reserved.has(key)) {\n      ivars.push(key);\n      cls.addInstanceVariableWithName_typeEncoding(key, \"@\");\n    }\n  }\n\n  cls.addInstanceMethodWithSelector_function_(NSSelectorFromString('init'), function () {\n    const self = SuperInit.call(this);\n    ivars.map(name => {\n      Object.defineProperty(self, name, {\n        get() {\n          return getIvar(self, name);\n        },\n        set(v) {\n          (0, _runtime.object_setInstanceVariable)(self, name, v);\n        }\n      });\n      self[name] = defn[name];\n    });\n    // If there is a passsed-in init funciton, call it now.\n    if (typeof defn.init == 'function') defn.init.call(this);\n    return self;\n  });\n\n  return cls.registerClass();\n};\n\nfunction getIvar(obj, name) {\n  const retPtr = MOPointer.new();\n  (0, _runtime.object_getInstanceVariable)(obj, name, retPtr);\n  return retPtr.value().retain().autorelease();\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuperCall = SuperCall;\nexports.CFunc = CFunc;\nconst objc_super_typeEncoding = '{objc_super=\"receiver\"@\"super_class\"#}';\n\n// You can store this to call your function. this must be bound to the current instance.\nfunction SuperCall(selector, argTypes, returnType) {\n  const func = CFunc(\"objc_msgSendSuper\", [{ type: '^' + objc_super_typeEncoding }, { type: \":\" }, ...argTypes], returnType);\n  return function (...args) {\n    const struct = make_objc_super(this, this.superclass());\n    const structPtr = MOPointer.alloc().initWithValue_(struct);\n    return func(structPtr, selector, ...args);\n  };\n}\n\n// Recursively create a MOStruct\nfunction makeStruct(def) {\n  if (typeof def !== 'object' || Object.keys(def).length == 0) {\n    return def;\n  }\n  const name = Object.keys(def)[0];\n  const values = def[name];\n\n  const structure = MOStruct.structureWithName_memberNames_runtime(name, Object.keys(values), Mocha.sharedRuntime());\n\n  Object.keys(values).map(member => {\n    structure[member] = makeStruct(values[member]);\n  });\n\n  return structure;\n}\n\nfunction make_objc_super(self, cls) {\n  return makeStruct({\n    objc_super: {\n      receiver: self,\n      super_class: cls\n    }\n  });\n}\n\n// Due to particularities of the JS bridge, we can't call into MOBridgeSupport objects directly\n// But, we can ask key value coding to do the dirty work for us ;)\nfunction setKeys(o, d) {\n  const funcDict = NSMutableDictionary.dictionary();\n  funcDict.o = o;\n  Object.keys(d).map(k => funcDict.setValue_forKeyPath(d[k], \"o.\" + k));\n}\n\n// Use any C function, not just ones with BridgeSupport\nfunction CFunc(name, args, retVal) {\n  function makeArgument(a) {\n    if (!a) return null;\n    const arg = MOBridgeSupportArgument.alloc().init();\n    setKeys(arg, {\n      type64: a.type\n    });\n    return arg;\n  }\n  const func = MOBridgeSupportFunction.alloc().init();\n  setKeys(func, {\n    name: name,\n    arguments: args.map(makeArgument),\n    returnValue: makeArgument(retVal)\n  });\n  return func;\n}\n\n/*\n@encode(char*) = \"*\"\n@encode(id) = \"@\"\n@encode(Class) = \"#\"\n@encode(void*) = \"^v\"\n@encode(CGRect) = \"{CGRect={CGPoint=dd}{CGSize=dd}}\"\n@encode(SEL) = \":\"\n*/\n\nfunction addStructToBridgeSupport(key, structDef) {\n  // OK, so this is probably the nastiest hack in this file.\n  // We go modify MOBridgeSupportController behind its back and use kvc to add our own definition\n  // There isn't another API for this though. So the only other way would be to make a real bridgesupport file.\n  const symbols = MOBridgeSupportController.sharedController().valueForKey('symbols');\n  if (!symbols) throw Error(\"Something has changed within bridge support so we can't add our definitions\");\n  // If someone already added this definition, don't re-register it.\n  if (symbols[key] !== null) return;\n  const def = MOBridgeSupportStruct.alloc().init();\n  setKeys(def, {\n    name: key,\n    type: structDef.type\n  });\n  symbols[key] = def;\n};\n\n// This assumes the ivar is an object type. Return value is pretty useless.\nconst object_getInstanceVariable = exports.object_getInstanceVariable = CFunc(\"object_getInstanceVariable\", [{ type: \"@\" }, { type: '*' }, { type: \"^@\" }], { type: \"^{objc_ivar=}\" });\n// Again, ivar is of object type\nconst object_setInstanceVariable = exports.object_setInstanceVariable = CFunc(\"object_setInstanceVariable\", [{ type: \"@\" }, { type: '*' }, { type: \"@\" }], { type: \"^{objc_ivar=}\" });\n\n// We need Mocha to understand what an objc_super is so we can use it as a function argument\naddStructToBridgeSupport('objc_super', { type: objc_super_typeEncoding });","var ObjCClass = require('cocoascript-class').default\n\nvar COLOR_CLASSES = [\n  'NSColor',\n  'NSCachedWhiteColor',\n  'NSColorSpaceColor',\n  'NSDynamicSystemColor',\n  'NSCachedColorSpaceColor',\n]\nfunction parseHexColor(color) {\n  // Check the string for incorrect formatting.\n  if (!color || color[0] !== '#') {\n    if (\n      color &&\n      color.class &&\n      COLOR_CLASSES.indexOf(String(color.class())) !== -1\n    ) {\n      return color\n    }\n    throw new Error(\n      'Incorrect color formating. It should be an hex color: #RRGGBBAA'\n    )\n  }\n\n  // append FF if alpha channel is not specified.\n  var source = color.substr(1)\n  if (source.length === 3) {\n    source += 'F'\n  } else if (source.length === 6) {\n    source += 'FF'\n  }\n  // Convert the string from #FFF format to #FFFFFF format.\n  var hex\n  if (source.length === 4) {\n    for (var i = 0; i < 4; i += 1) {\n      hex += source[i]\n      hex += source[i]\n    }\n  } else if (source.length === 8) {\n    hex = source\n  } else {\n    return NSColor.whiteColor()\n  }\n\n  var r = parseInt(hex.slice(0, 2), 16)\n  var g = parseInt(hex.slice(2, 4), 16)\n  var b = parseInt(hex.slice(4, 6), 16)\n  var a = parseInt(hex.slice(6, 8), 16)\n\n  return NSColor.colorWithSRGBRed_green_blue_alpha(r, g, b, a)\n}\n\n// We create one ObjC class for ourselves here\nvar WindowDelegateClass\n\nmodule.exports = function(browserWindow, panel, webview) {\n  // keep reference to the subviews\n  browserWindow._panel = panel\n  browserWindow._webview = webview\n  browserWindow._destroyed = false\n\n  browserWindow.destroy = function() {\n    return panel.close()\n  }\n\n  browserWindow.close = function() {\n    if (!browserWindow.isClosable()) {\n      return\n    }\n\n    panel.performClose(null)\n  }\n\n  function focus(focused) {\n    if (browserWindow.isVisible()) {\n      return\n    }\n    if (focused) {\n      NSApplication.sharedApplication().activateIgnoringOtherApps(true)\n      panel.makeKeyAndOrderFront(null)\n    } else {\n      panel.orderBack(null)\n    }\n  }\n\n  browserWindow.focus = focus.bind(this, true)\n  browserWindow.blur = focus.bind(this, false)\n\n  browserWindow.isFocused = function() {\n    return panel.isKeyWindow()\n  }\n\n  browserWindow.isDestroyed = function() {\n    return browserWindow._destroyed\n  }\n\n  browserWindow.show = function() {\n    // This method is supposed to put focus on window, however if the app does not\n    // have focus then \"makeKeyAndOrderFront\" will only show the window.\n    NSApp.activateIgnoringOtherApps(true)\n\n    return panel.makeKeyAndOrderFront(null)\n  }\n\n  browserWindow.showInactive = function() {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.hide = function() {\n    return panel.orderOut(null)\n  }\n\n  browserWindow.isVisible = function() {\n    return panel.isVisible()\n  }\n\n  browserWindow.isModal = function() {\n    return false\n  }\n\n  browserWindow.maximize = function() {\n    if (!browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n  browserWindow.unmaximize = function() {\n    if (browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n\n  browserWindow.isMaximized = function() {\n    if ((panel.styleMask() & NSResizableWindowMask) !== 0) {\n      return panel.isZoomed()\n    }\n    var rectScreen = NSScreen.mainScreen().visibleFrame()\n    var rectWindow = panel.frame()\n    return (\n      rectScreen.origin.x == rectWindow.origin.x &&\n      rectScreen.origin.y == rectWindow.origin.y &&\n      rectScreen.size.width == rectWindow.size.width &&\n      rectScreen.size.height == rectWindow.size.height\n    )\n  }\n\n  browserWindow.minimize = function() {\n    return panel.miniaturize(null)\n  }\n\n  browserWindow.restore = function() {\n    return panel.deminiaturize(null)\n  }\n\n  browserWindow.isMinimized = function() {\n    return panel.isMiniaturized()\n  }\n\n  browserWindow.setFullScreen = function(fullscreen) {\n    if (fullscreen !== browserWindow.isFullscreen()) {\n      panel.toggleFullScreen(null)\n    }\n  }\n\n  browserWindow.isFullscreen = function() {\n    return panel.styleMask() & NSFullScreenWindowMask\n  }\n\n  browserWindow.setAspectRatio = function(aspectRatio /* , extraSize */) {\n    // Reset the behaviour to default if aspect_ratio is set to 0 or less.\n    if (aspectRatio > 0.0) {\n      panel.setAspectRatio(NSMakeSize(aspectRatio, 1.0))\n    } else {\n      panel.setResizeIncrements(NSMakeSize(1.0, 1.0))\n    }\n  }\n\n  browserWindow.setBounds = function(bounds, animate) {\n    // Do nothing if in fullscreen mode.\n    if (browserWindow.isFullscreen()) {\n      return\n    }\n\n    // TODO: Check size constraints since setFrame does not check it.\n    var size = bounds.size\n    // size.SetToMax(GetMinimumSize());\n    // gfx::Size max_size = GetMaximumSize();\n    // if (!max_size.IsEmpty())\n    //   size.SetToMin(max_size);\n\n    var cocoaBounds = NSMakeRect(bounds.origin.x, 0, size.width, size.height)\n    // Flip coordinates based on the primary screen.\n    var screen = NSScreen.screens().firstObject()\n    cocoaBounds.origin.y =\n      NSHeight(screen.frame()) - size.height - bounds.origin.y\n\n    panel.setFrame_display_animate(cocoaBounds, true, animate)\n  }\n\n  browserWindow.getBounds = function() {\n    return panel.frame()\n  }\n\n  browserWindow.setContentBounds = function(/* bounds, animate */) {\n    // TODO:\n  }\n\n  browserWindow.getContentBounds = function() {\n    // TODO:\n  }\n\n  browserWindow.setSize = function(width, height, animate) {\n    var bounds = browserWindow.getBounds()\n    bounds.size.height = height\n    bounds.size.width = width\n\n    // TODO: handle resizing around center\n\n    return browserWindow.setBounds(bounds, animate)\n  }\n\n  browserWindow.getSize = function() {\n    var bounds = browserWindow.getBounds()\n    return [bounds.size.width, bounds.size.height]\n  }\n\n  browserWindow.setContentSize = function(width, height, animate) {\n    var bounds = browserWindow.getContentBounds()\n    bounds.size.height = height\n    bounds.size.width = width\n\n    // TODO: handle resizing around center\n\n    return browserWindow.setContentBounds(bounds, animate)\n  }\n\n  browserWindow.getContentSize = function() {\n    var bounds = browserWindow.getContentBounds()\n    return [bounds.size.width, bounds.size.height]\n  }\n\n  browserWindow.setMinimumSize = function(width, height) {\n    const minSize = { width: width, height: height }\n    panel.setContentMinSize(minSize)\n  }\n\n  browserWindow.getMinimumSize = function() {\n    const size = panel.contentMinSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setMaximumSize = function(width, height) {\n    const minSize = { width: width, height: height }\n    panel.setContentMaxSize(minSize)\n  }\n\n  browserWindow.getMaximumSize = function() {\n    const size = panel.contentMaxSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setResizable = function(resizable) {\n    return browserWindow._setStyleMask(resizable, NSResizableWindowMask)\n  }\n\n  browserWindow.isResizable = function() {\n    return panel.styleMask() & NSResizableWindowMask\n  }\n\n  browserWindow.setMovable = function(movable) {\n    return panel.setMovable(movable)\n  }\n  browserWindow.isMovable = function() {\n    return panel.isMovable()\n  }\n\n  browserWindow.setMinimizable = function(minimizable) {\n    return browserWindow._setStyleMask(minimizable, NSMiniaturizableWindowMask)\n  }\n\n  browserWindow.isMinimizable = function() {\n    return panel.styleMask() & NSMiniaturizableWindowMask\n  }\n\n  browserWindow.setMaximizable = function(maximizable) {\n    if (panel.standardWindowButton(NSWindowZoomButton)) {\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(maximizable)\n    }\n  }\n\n  browserWindow.isMaximizable = function() {\n    return (\n      panel.standardWindowButton(NSWindowZoomButton) &&\n      panel.standardWindowButton(NSWindowZoomButton).isEnabled()\n    )\n  }\n\n  browserWindow.setFullScreenable = function(fullscreenable) {\n    browserWindow._setCollectionBehavior(\n      fullscreenable,\n      NSWindowCollectionBehaviorFullScreenPrimary\n    )\n    // On EL Capitan this flag is required to hide fullscreen button.\n    browserWindow._setCollectionBehavior(\n      !fullscreenable,\n      NSWindowCollectionBehaviorFullScreenAuxiliary\n    )\n  }\n\n  browserWindow.isFullScreenable = function() {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorFullScreenPrimary\n  }\n\n  browserWindow.setClosable = function(closable) {\n    browserWindow._setStyleMask(closable, NSClosableWindowMask)\n  }\n\n  browserWindow.isClosable = function() {\n    return panel.styleMask() & NSClosableWindowMask\n  }\n\n  browserWindow.setAlwaysOnTop = function(top, level, relativeLevel) {\n    var windowLevel = NSNormalWindowLevel\n    var maxWindowLevel = CGWindowLevelForKey(kCGMaximumWindowLevelKey)\n    var minWindowLevel = CGWindowLevelForKey(kCGMinimumWindowLevelKey)\n\n    if (top) {\n      if (level === 'normal') {\n        windowLevel = NSNormalWindowLevel\n      } else if (level === 'torn-off-menu') {\n        windowLevel = NSTornOffMenuWindowLevel\n      } else if (level === 'modal-panel') {\n        windowLevel = NSModalPanelWindowLevel\n      } else if (level === 'main-menu') {\n        windowLevel = NSMainMenuWindowLevel\n      } else if (level === 'status') {\n        windowLevel = NSStatusWindowLevel\n      } else if (level === 'pop-up-menu') {\n        windowLevel = NSPopUpMenuWindowLevel\n      } else if (level === 'screen-saver') {\n        windowLevel = NSScreenSaverWindowLevel\n      } else if (level === 'dock') {\n        // Deprecated by macOS, but kept for backwards compatibility\n        windowLevel = NSDockWindowLevel\n      } else {\n        windowLevel = NSFloatingWindowLevel\n      }\n    }\n\n    var newLevel = windowLevel + (relativeLevel || 0)\n    if (newLevel >= minWindowLevel && newLevel <= maxWindowLevel) {\n      panel.setLevel(newLevel)\n    } else {\n      throw new Error(\n        'relativeLevel must be between ' +\n          minWindowLevel +\n          ' and ' +\n          maxWindowLevel\n      )\n    }\n  }\n\n  browserWindow.isAlwaysOnTop = function() {\n    return panel.level() !== NSNormalWindowLevel\n  }\n\n  browserWindow.moveTop = function() {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.center = function() {\n    panel.center()\n  }\n\n  browserWindow.setPosition = function(x, y, animate) {\n    var bounds = browserWindow.getBounds()\n    var mainScreenRect = NSScreen.screens()\n      .firstObject()\n      .frame()\n    bounds.origin.x = x\n    bounds.origin.y = Math.round(NSHeight(mainScreenRect) - y)\n\n    return browserWindow.setBounds(bounds, animate)\n  }\n\n  browserWindow.getPosition = function() {\n    var bounds = browserWindow.getBounds()\n    var mainScreenRect = NSScreen.screens()\n      .firstObject()\n      .frame()\n    return [\n      bounds.origin.x,\n      Math.round(NSHeight(mainScreenRect) - bounds.origin.y),\n    ]\n  }\n\n  browserWindow.setTitle = function(title) {\n    panel.setTitle(title)\n  }\n\n  browserWindow.getTitle = function() {\n    return String(panel.title())\n  }\n\n  var attentionRequestId = 0\n  browserWindow.flashFrame = function(flash) {\n    if (flash) {\n      attentionRequestId = NSApp.requestUserAttention(NSInformationalRequest)\n    } else {\n      NSApp.cancelUserAttentionRequest(attentionRequestId)\n      attentionRequestId = 0\n    }\n  }\n\n  browserWindow.getNativeWindowHandle = function() {\n    return panel\n  }\n\n  browserWindow.getNativeWebViewHandle = function() {\n    return webview\n  }\n\n  browserWindow.loadURL = function(url) {\n    // When frameLocation is a file, prefix it with the Sketch Resources path\n    if (/^(?!http|localhost|www|file).*\\.html?$/.test(url)) {\n      if (typeof __command !== 'undefined' && __command.pluginBundle()) {\n        url = __command\n          .pluginBundle()\n          .urlForResourceNamed(url)\n          .path()\n      }\n    }\n    webview.setMainFrameURL(url)\n  }\n\n  browserWindow.reload = function() {\n    webview.reload()\n  }\n\n  browserWindow.setHasShadow = function(hasShadow) {\n    return panel.setHasShadow(hasShadow)\n  }\n\n  browserWindow.hasShadow = function() {\n    return panel.hasShadow()\n  }\n\n  browserWindow.setOpacity = function(opacity) {\n    return panel.setAlphaValue(opacity)\n  }\n\n  browserWindow.getOpacity = function() {\n    return panel.alphaValue()\n  }\n\n  browserWindow.setVisibleOnAllWorkspaces = function(visible) {\n    return browserWindow._setCollectionBehavior(\n      visible,\n      NSWindowCollectionBehaviorCanJoinAllSpaces\n    )\n  }\n\n  browserWindow.isVisibleOnAllWorkspaces = function() {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorCanJoinAllSpaces\n  }\n\n  browserWindow.setIgnoreMouseEvents = function(ignore) {\n    return panel.setIgnoresMouseEvents(ignore)\n  }\n\n  browserWindow.setContentProtection = function(enable) {\n    panel.setSharingType(enable ? NSWindowSharingNone : NSWindowSharingReadOnly)\n  }\n\n  browserWindow.setAutoHideCursor = function(autoHide) {\n    panel.setDisableAutoHideCursor(autoHide)\n  }\n\n  browserWindow.setVibrancy = function(type) {\n    var effectView = browserWindow._vibrantView\n\n    if (!type) {\n      if (effectView == null) {\n        return\n      }\n\n      effectView.removeFromSuperview()\n      panel.setVibrantView(null)\n      return\n    }\n\n    if (effectView == null) {\n      var contentView = panel.contentView()\n      effectView = NSVisualEffectView.alloc().initWithFrame(\n        contentView.bounds()\n      )\n      browserWindow._vibrantView = effectView\n\n      effectView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n      effectView.setBlendingMode(NSVisualEffectBlendingModeBehindWindow)\n      effectView.setState(NSVisualEffectStateActive)\n      effectView.setFrame(contentView.bounds())\n      contentView.addSubview_positioned_relativeTo(\n        effectView,\n        NSWindowBelow,\n        null\n      )\n    }\n\n    var vibrancyType = NSVisualEffectMaterialLight\n\n    if (type === 'appearance-based') {\n      vibrancyType = NSVisualEffectMaterialAppearanceBased\n    } else if (type === 'light') {\n      vibrancyType = NSVisualEffectMaterialLight\n    } else if (type === 'dark') {\n      vibrancyType = NSVisualEffectMaterialDark\n    } else if (type === 'titlebar') {\n      vibrancyType = NSVisualEffectMaterialTitlebar\n    } else if (type === 'selection') {\n      vibrancyType = NSVisualEffectMaterialSelection\n    } else if (type === 'menu') {\n      vibrancyType = NSVisualEffectMaterialMenu\n    } else if (type === 'popover') {\n      vibrancyType = NSVisualEffectMaterialPopover\n    } else if (type === 'sidebar') {\n      vibrancyType = NSVisualEffectMaterialSidebar\n    } else if (type === 'medium-light') {\n      vibrancyType = NSVisualEffectMaterialMediumLight\n    } else if (type === 'ultra-dark') {\n      vibrancyType = NSVisualEffectMaterialUltraDark\n    }\n\n    effectView.setMaterial(vibrancyType)\n  }\n\n  browserWindow._setBackgroundColor = function(colorName) {\n    var color = parseHexColor(colorName)\n    webview.setDrawsBackground(false)\n    panel.backgroundColor = color\n  }\n\n  browserWindow._invalidate = function() {\n    panel.flushWindow()\n    panel.contentView().setNeedsDisplay(true)\n  }\n\n  browserWindow._setStyleMask = function(on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setStyleMask(panel.styleMask() | flag)\n    } else {\n      panel.setStyleMask(panel.styleMask() & ~flag)\n    }\n    // Change style mask will make the zoom button revert to default, probably\n    // a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._setCollectionBehavior = function(on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setCollectionBehavior(panel.collectionBehavior() | flag)\n    } else {\n      panel.setCollectionBehavior(panel.collectionBehavior() & ~flag)\n    }\n    // Change collectionBehavior will make the zoom button revert to default,\n    // probably a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._showWindowButton = function(button) {\n    var view = panel.standardWindowButton(button)\n    view.superview().addSubview_positioned_relative(view, NSWindowAbove, null)\n  }\n\n  if (!WindowDelegateClass) {\n    WindowDelegateClass = ObjCClass({\n      classname: 'WindowDelegateClass',\n      utils: null,\n\n      // Tells the delegate that the window has been resized.\n      'windowDidResize:': function() {\n        this.utils.emit('resize')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowDidMiniaturize:': function() {\n        this.utils.emit('minimize')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowDidDeminiaturize:': function() {\n        this.utils.emit('restore')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowDidEnterFullScreen:': function() {\n        this.utils.emit('enter-full-screen')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowDidExitFullScreen:': function() {\n        this.utils.emit('leave-full-screen')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowDidMove:': function() {\n        this.utils.emit('move')\n        this.utils.emit('moved')\n      },\n\n      // Tells the delegate that the window has been resized.\n      'windowShouldClose:': function() {\n        var shouldClose = true\n        this.utils.emit('close', {\n          get defaultPrevented() {\n            return !shouldClose\n          },\n          preventDefault: function() {\n            shouldClose = false\n          },\n        })\n        return shouldClose\n      },\n\n      'windowWillClose:': function() {\n        this.utils.emit('closed')\n      },\n\n      'windowDidBecomeKey:': function() {\n        this.utils.emit('focus', panel.currentEvent())\n      },\n\n      'windowDidResignKey:': function() {\n        this.utils.emit('blur')\n      },\n    })\n  }\n\n  var windowDelegate = WindowDelegateClass.new()\n  windowDelegate.utils = NSDictionary.dictionaryWithDictionary({\n    emit: browserWindow.emit.bind(browserWindow),\n  })\n\n  panel.setDelegate(windowDelegate)\n}\n","module.exports = {\n  JS_BRIDGE: '__skpm_sketchBridge',\n}\n","var tagsToFocus =\n  '[\"text\", \"textarea\", \"date\", \"datetime-local\", \"email\", \"number\", \"month\", \"password\", \"search\", \"tel\", \"time\", \"url\", \"week\" ]'\n\nmodule.exports = function(webView, event) {\n  var point = webView.convertPoint_fromView(event.locationInWindow(), null)\n  var x = point.x\n  var y = webView.frame().size.height - point.y // the coord start from the bottom instead of the top\n  return (\n    'var el = document.elementFromPoint(' + // get the DOM element that match the event\n    x +\n    ', ' +\n    y +\n    '); ' +\n    'if (el && ' + // some tags need to be focused instead of clicked\n    tagsToFocus +\n    '.indexOf(el.type) >= 0 && ' +\n    'el.focus' +\n    ') {' +\n    'el.focus();' + // so focus them\n    '} else {' +\n    'el.dispatchEvent(new Event(\"click\", {bubbles: true}))' + // click the others\n    '}'\n  )\n}\n","function addEdgeConstraint(edge, subview, view, constant) {\n  view.addConstraint(\n    NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n      subview,\n      edge,\n      NSLayoutRelationEqual,\n      view,\n      edge,\n      1,\n      constant\n    )\n  )\n}\nmodule.exports = function fitSubviewToView(subview, view, constants) {\n  constants = constants || []\n  subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n  addEdgeConstraint(NSLayoutAttributeLeft, subview, view, constants[0] || 0)\n  addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[1] || 0)\n  addEdgeConstraint(NSLayoutAttributeRight, subview, view, constants[2] || 0)\n  addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[3] || 0)\n}\n","/* let's try to match the API from Electron's Browser window\n(https://github.com/electron/electron/blob/master/docs/api/browser-window.md) */\nvar EventEmitter = require('@skpm/events')\nvar buildBrowserAPI = require('./browser-api')\nvar buildWebAPI = require('./webview-api')\nvar fitSubviewToView = require('./fitSubview')\nvar dispatchFirstClick = require('./dispatch-first-click')\n\nfunction BrowserWindow(options) {\n  options = options || {}\n\n  var identifier = options.identifier || NSUUID.UUID().UUIDString()\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  var existingBrowserWindow = BrowserWindow.fromId(identifier)\n\n  // if we already have a window opened, reuse it\n  if (existingBrowserWindow) {\n    return existingBrowserWindow\n  }\n\n  var browserWindow = new EventEmitter()\n  browserWindow.id = identifier\n\n  // Long-running script\n  var fiber\n  try {\n    fiber = coscript.createFiber()\n  } catch (err) {\n    coscript.shouldKeepAround = true\n  }\n\n  // Window size\n  var width = options.width || 800\n  var height = options.height || 600\n  var mainScreenRect = NSScreen.screens()\n    .firstObject()\n    .frame()\n  var cocoaBounds = NSMakeRect(\n    typeof options.x !== 'undefined'\n      ? options.x\n      : Math.round((NSWidth(mainScreenRect) - width) / 2),\n    typeof options.y !== 'undefined'\n      ? options.y\n      : Math.round((NSHeight(mainScreenRect) - height) / 2),\n    width,\n    height\n  )\n\n  if (options.titleBarStyle && options.titleBarStyle !== 'default') {\n    options.frame = false\n  }\n\n  var useStandardWindow = options.windowType !== 'textured'\n  var styleMask = NSTitledWindowMask\n\n  // this is commented out because the toolbar doesn't appear otherwise :thinking-face:\n  // if (!useStandardWindow || options.frame === false) {\n  //   styleMask = NSFullSizeContentViewWindowMask\n  // }\n  if (options.minimizable !== false) {\n    styleMask |= NSMiniaturizableWindowMask\n  }\n  if (options.closable !== false) {\n    styleMask |= NSClosableWindowMask\n  }\n  if (options.resizable !== false) {\n    styleMask |= NSResizableWindowMask\n  }\n  if (!useStandardWindow || options.transparent || options.frame === false) {\n    styleMask |= NSTexturedBackgroundWindowMask\n  }\n\n  // TODO: handle modal mode\n\n  var panel = NSPanel.alloc().initWithContentRect_styleMask_backing_defer(\n    cocoaBounds,\n    styleMask,\n    NSBackingStoreBuffered,\n    true\n  )\n\n  var webView = WebView.alloc().initWithFrame(\n    NSMakeRect(0, 0, options.width || 800, options.height || 600)\n  )\n  webView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n\n  buildBrowserAPI(browserWindow, panel, webView)\n  buildWebAPI(browserWindow, panel, webView)\n\n  if (options.windowType === 'desktop') {\n    panel.setLevel(kCGDesktopWindowLevel - 1)\n    panel.setCanBecomeKeyWindow(false)\n    panel.setCollectionBehavior(\n      NSWindowCollectionBehaviorCanJoinAllSpaces |\n        NSWindowCollectionBehaviorStationary |\n        NSWindowCollectionBehaviorIgnoresCycle\n    )\n  }\n\n  if (\n    typeof options.minWidth !== 'undefined' ||\n    typeof options.minHeight !== 'undefined'\n  ) {\n    browserWindow.setMinimumSize(options.minWidth || 0, options.minHeight || 0)\n  }\n\n  if (\n    typeof options.maxWidth !== 'undefined' ||\n    typeof options.maxHeight !== 'undefined'\n  ) {\n    browserWindow.setMaximumSize(\n      options.maxWidth || 10000,\n      options.maxHeight || 10000\n    )\n  }\n\n  if (options.focusable === false) {\n    panel.setCanBecomeKeyWindow(false)\n  }\n\n  if (options.transparent || options.frame === false) {\n    panel.titlebarAppearsTransparent = true\n    panel.titleVisibility = NSWindowTitleHidden\n    panel.setOpaque(0)\n    panel.isMovableByWindowBackground = true\n    var toolbar2 = NSToolbar.alloc().initWithIdentifier(\n      'titlebarStylingToolbar'\n    )\n    toolbar2.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar2)\n  }\n\n  if (options.titleBarStyle === 'hiddenInset') {\n    var toolbar = NSToolbar.alloc().initWithIdentifier('titlebarStylingToolbar')\n    toolbar.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar)\n  }\n\n  if (options.frame === false || !options.useContentSize) {\n    browserWindow.setSize(width, height)\n  }\n\n  if (options.center) {\n    browserWindow.center()\n  }\n\n  if (options.alwaysOnTop) {\n    browserWindow.setAlwaysOnTop(true)\n  }\n\n  if (options.fullscreen) {\n    browserWindow.setFullScreen(true)\n  }\n  browserWindow.setFullScreenable(!!options.fullscreenable)\n\n  const title =\n    options.title ||\n    (typeof __command !== 'undefined' && __command.pluginBundle()\n      ? __command.pluginBundle().name()\n      : undefined)\n  if (title) {\n    browserWindow.setTitle(title)\n  }\n\n  var backgroundColor = options.backgroundColor\n  if (options.transparent) {\n    backgroundColor = NSColor.clearColor()\n  }\n  if (!backgroundColor && options.frame === false && options.vibrancy) {\n    backgroundColor = NSColor.clearColor()\n  }\n\n  browserWindow._setBackgroundColor(\n    backgroundColor || NSColor.windowBackgroundColor()\n  )\n\n  if (options.hasShadow === false) {\n    browserWindow.setHasShadow(false)\n  }\n\n  if (typeof options.opacity !== 'undefined') {\n    browserWindow.setOpacity(options.opacity)\n  }\n\n  if (options.webPreferences) {\n    // TODO:\n  }\n\n  var contentView = panel.contentView()\n\n  if (options.frame !== false) {\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n  } else {\n    // In OSX 10.10, adding subviews to the root view for the NSView hierarchy\n    // produces warnings. To eliminate the warnings, we resize the contentView\n    // to fill the window, and add subviews to that.\n    // http://crbug.com/380412\n    contentView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n    fitSubviewToView(contentView, contentView.superview())\n\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n\n    // The fullscreen button should always be hidden for frameless window.\n    if (panel.standardWindowButton(NSWindowFullScreenButton)) {\n      panel.standardWindowButton(NSWindowFullScreenButton).setHidden(true)\n    }\n\n    if (!options.titleBarStyle || options.titleBarStyle === 'default') {\n      // Hide the window buttons.\n      panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n      panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n      panel.standardWindowButton(NSWindowCloseButton).setHidden(true)\n\n      // Some third-party macOS utilities check the zoom button's enabled state to\n      // determine whether to show custom UI on hover, so we disable it here to\n      // prevent them from doing so in a frameless app window.\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(false)\n    }\n  }\n\n  if (options.vibrancy) {\n    browserWindow.setVibrancy(options.vibrancy)\n  }\n\n  // Set maximizable state last to ensure zoom button does not get reset\n  // by calls to other APIs.\n  browserWindow.setMaximizable(options.maximizable !== false)\n\n  if (options.acceptsFirstMouse) {\n    browserWindow.on('focus', function(event) {\n      if (event.type() === NSEventTypeLeftMouseDown) {\n        browserWindow.webContents.executeJavaScript(\n          dispatchFirstClick(webView, event)\n        )\n      }\n    })\n  }\n\n  if (options.show !== false) {\n    browserWindow.show()\n  }\n\n  browserWindow.on('closed', function() {\n    browserWindow._destroyed = true\n    threadDictionary.removeObjectForKey(identifier)\n    if (fiber) {\n      fiber.cleanup()\n    } else {\n      coscript.shouldKeepAround = false\n    }\n  })\n\n  threadDictionary[identifier] = browserWindow\n\n  if (fiber) {\n    fiber.onCleanup(function() {\n      if (!browserWindow._destroyed) {\n        browserWindow.destroy()\n      }\n    })\n  }\n\n  return browserWindow\n}\n\nBrowserWindow.fromId = function(identifier) {\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  if (threadDictionary[identifier]) {\n    var browserWindow = threadDictionary[identifier]\n    browserWindow.show()\n\n    return browserWindow\n  }\n\n  return undefined\n}\n\nmodule.exports = BrowserWindow\n","module.exports = function(webArguments) {\n  var args = null\n  try {\n    args = JSON.parse(webArguments[0])\n  } catch (e) {\n    // malformed arguments\n  }\n\n  if (\n    !args ||\n    !args.constructor ||\n    args.constructor !== Array ||\n    args.length == 0\n  ) {\n    return null\n  }\n\n  return args\n}\n","var ObjCClass = require('cocoascript-class').default\nvar EventEmitter = require('@skpm/events')\nvar parseWebArguments = require('./parseWebArguments')\nvar CONSTANTS = require('./constants')\n\n// We create one ObjC class for ourselves here\nvar FrameLoadDelegateClass\n\n// let's try to match https://github.com/electron/electron/blob/master/docs/api/web-contents.md\nmodule.exports = function buildAPI(browserWindow, panel, webview) {\n  var webContents = new EventEmitter()\n\n  webContents.loadURL = browserWindow.loadURL\n  webContents.getURL = webview.mainFrameURL\n  webContents.getTitle = webview.mainFrameTitle\n  webContents.isDestroyed = function() {\n    // TODO:\n  }\n  webContents.isLoading = function() {\n    return webview.loading()\n  }\n  webContents.stop = webview.stopLoading\n  webContents.reload = webview.reload\n  webContents.canGoBack = webview.canGoBack\n  webContents.canGoForward = webview.canGoForward\n  webContents.goBack = webview.goBack\n  webContents.goForward = webview.goForward\n  webContents.executeJavaScript = function(script) {\n    return webview.stringByEvaluatingJavaScriptFromString(script)\n  }\n  webContents.undo = function() {\n    webview.undoManager().undo()\n  }\n  webContents.redo = function() {\n    webview.undoManager().redo()\n  }\n  webContents.cut = webview.cut\n  webContents.copy = webview.copy\n  webContents.paste = webview.paste\n  webContents.pasteAndMatchStyle = webview.pasteAsRichText\n  webContents.delete = webview.delete\n  webContents.replace = webview.replaceSelectionWithText\n  webContents.getNativeWebview = function() {\n    return webview\n  }\n\n  if (!FrameLoadDelegateClass) {\n    FrameLoadDelegateClass = ObjCClass({\n      classname: 'FrameLoadDelegateClass',\n      state: NSMutableDictionary.dictionaryWithDictionary({\n        lastQueryId: null,\n        wasReady: 0,\n      }),\n      utils: null,\n\n      // // Called when a client redirect is cancelled.\n      // 'webView:didCancelClientRedirectForFrame:': function (\n      //   webView,\n      //   webFrame\n      // ) {},\n\n      // Called when the scroll position within a frame changes.\n      'webView:didChangeLocationWithinPageForFrame:': function(webView) {\n        this.utils.emitEvent('did-navigate-in-page', [\n          {},\n          webView\n            .windowScriptObject()\n            .evaluateWebScript('window.location.href'),\n        ])\n      },\n\n      // // Called when the JavaScript window object in a frame is ready for loading.\n      // 'webView:didClearWindowObject:forFrame:': function (\n      //   webView,\n      //   windowObject,\n      //   webFrame\n      // ) {},\n\n      // // Called when content starts arriving for a page load.\n      // 'webView:didCommitLoadforFrame:': function (webView, webFrame) {},\n\n      // // Notifies the delegate that a new JavaScript context has been created.\n      // N.B - we intentionally omit the 2nd parameter (javascriptContext)\n      // It was causing crashes in Sketch - possibly because of issues with converting\n      // it from Objective C to Javascript\n      'webView:didCreateJavaScriptContext:forFrame:': function(webView) {\n        // any time there is a new js context, set a global value (on window.) to refer\n        // to this frameloaddelegate class\n        webView.windowScriptObject().setValue_forKey_(this, CONSTANTS.JS_BRIDGE)\n      },\n\n      // the normal way to expose a selector to webscript is with 'isSelectorExcludedFromWebScript:'\n      // but that didn't work, so this is an alternative. This method gets invoked any time\n      // an unknown method is called on this class by webscript\n      'invokeUndefinedMethodFromWebScript:withArguments:': function(\n        method,\n        webArguments\n      ) {\n        if (String(method) !== 'callNative') {\n          return false\n        }\n\n        var args = this.utils.parseWebArguments(webArguments)\n        if (!args) {\n          return false\n        }\n\n        this.utils.emit.apply(this, args)\n        return true\n      },\n\n      // Called when an error occurs loading a committed data source.\n      'webView:didFailLoadWithError:forFrame:': function(_, error) {\n        this.utils.emit('did-fail-load', error)\n      },\n\n      // Called when a page load completes.\n      'webView:didFinishLoadForFrame:': function() {\n        if (this.state.wasReady == 0) {\n          // eslint-disable-line\n          this.utils.emitBrowserEvent('ready-to-show')\n          this.state.setObject_forKey(1, 'wasReady')\n        }\n        this.utils.emit('did-finish-load')\n        this.utils.emit('did-frame-finish-load')\n        this.utils.emit('dom-ready')\n      },\n\n      // Called when a provisional data source for a frame receives a server redirect.\n      'webView:didReceiveServerRedirectForProvisionalLoadForFrame:': function() {\n        this.utils.emit('did-get-redirect-request')\n      },\n\n      // Called when the page title of a frame loads or changes.\n      'webView:didReceiveTitle:forFrame:': function(_, _title) {\n        var title = String(_title)\n        var shouldChangeTitle = true\n        this.utils.emitBrowserEvent(\n          'page-title-updated',\n          {\n            get defaultPrevented() {\n              return !shouldChangeTitle\n            },\n            preventDefault: function() {\n              shouldChangeTitle = false\n            },\n          },\n          title\n        )\n\n        if (shouldChangeTitle && title) {\n          this.utils.setTitle(title)\n        }\n      },\n\n      // Called when a page load is in progress in a given frame.\n      'webView:didStartProvisionalLoadForFrame:': function() {\n        this.utils.emit('did-start-loading')\n      },\n\n      // Called when a frame will be closed.\n      // 'webView:willCloseFrame:': function (webView, webFrame) {}\n\n      // Called when a frame receives a client redirect and before it is fired.\n      'webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:': function(\n        _,\n        url\n      ) {\n        this.utils.emit('will-navigate', {}, String(url.absoluteString))\n      },\n    })\n  }\n\n  var frameLoadDelegate = FrameLoadDelegateClass.new()\n  frameLoadDelegate.utils = NSDictionary.dictionaryWithDictionary({\n    setTitle: browserWindow.setTitle.bind(browserWindow),\n    emitBrowserEvent: browserWindow.emit.bind(browserWindow),\n    emit: webContents.emit.bind(webContents),\n    parseWebArguments: parseWebArguments,\n  })\n  // reset state as well\n  frameLoadDelegate.state = NSMutableDictionary.dictionaryWithDictionary({\n    lastQueryId: null,\n    wasReady: 0,\n  })\n\n  webview.setFrameLoadDelegate(frameLoadDelegate)\n\n  browserWindow.webContents = webContents\n}\n","import BrowserWindow from \"sketch-module-web-view\";\n\nconst options = {\n  identifier: \"move-to-library\",\n  width: 550,\n  height: 500,\n  frame: true,\n  minHeight: 80,\n  minWidth: 250,\n  minimizable: false,\n  maximizable: false,\n  useContentSize: true,\n  movable: true,\n  alwaysOnTop: true,\n  center: false,\n  show: false\n};\n\nvar browserWindow = {};\n\nexport function moveAllSymbolsToExisitingLibrary(context) {\n  var libraries = getAllLibraries();\n  getLayoutSettings(\n    context,\n    context.document.documentData().localSymbols(),\n    libraries\n  );\n}\n\nexport function moveSelectedSymbolsToExisitingLibrary(context) {\n  var libraries = getAllLibraries();\n  getLayoutSettings(context, context.selection, libraries);\n}\n\nfunction moveToLibrary(context, symbols, library) {\n  if (symbols.count() > 0) {\n    var foreignSymbolsInLibraryByName = getSymbolsInDocByName(\n      library.document()\n    );\n    var localSymbolsByName = getSymbolsInDocByName(\n      context.document.documentData()\n    );\n    getIdMap(\n      context,\n      localSymbolsByName,\n      foreignSymbolsInLibraryByName,\n      library\n    );\n    for (var i = 0; i < symbols.count(); i++) {\n      if (validate(symbols[i])) {\n        // var presentatge = i / symbols.count() * 100;\n        // browserWindow.webContents.executeJavaScript(\n        //   `changeLoading(${presentatge},${JSON.stringify(\n        //     \"Moving \" + symbols[i].name()\n        //   )})`\n        // );\n        // context.api().message(\"Moving [\" + i + \"/\" + selection.count() + \"] 🕗\")\n        replaceInstance(\n          context,\n          symbols[i],\n          foreignSymbolsInLibraryByName,\n          library\n        );\n      }\n    }\n    // browserWindow.webContents.executeJavaScript(\n    //   `changeLoading(${100},${JSON.stringify(\n    //     movedSymbolsNumber + \" Re-attached ✌️\"\n    //   )})`\n    // );\n    // context\n    //   .api()\n    //   .message(\n    //     movedSymbolsNumber +\n    //       \" Moved Symbols ✌️ and \" +\n    //       movedInstancesNumber +\n    //       \" reattached Symbols instances ✌️\"\n    //   );\n    browserWindow.webContents.executeJavaScript(\n      `successLoading(${JSON.stringify(\n        movedSymbolsNumber +\n          \" Moved Symbols ✌️ and \" +\n          movedInstancesNumber +\n          \" reattached Symbols instances ✌️\"\n      )})`\n    );\n  } else {\n    context.api().message(\"No selection found!\");\n    browserWindow.webContents.executeJavaScript(`errorLoading()`);\n  }\n}\n\nfunction getLayoutSettings(context, symbols, librariesArray) {\n  browserWindow = new BrowserWindow(options);\n  //browserWindow.loadURL(\"http://localhost:3000/\");\n  browserWindow.loadURL(require(\"../assets/UI/index.html\"));\n  LOG(librariesArray);\n\n  browserWindow.once(\"ready-to-show\", () => {\n    browserWindow.show();\n    browserWindow.webContents.executeJavaScript(\n      `getLibraries(${JSON.stringify(librariesArray)})`\n    );\n  });\n  browserWindow.webContents.on(\"setLibrary\", function(libraryIndex) {\n    try {\n      moveToLibrary(context, symbols, librariesArray[libraryIndex].Reference);\n    } catch (err) {\n      browserWindow.webContents.executeJavaScript(`errorLoading()`);\n    }\n  });\n  browserWindow.webContents.on(\"openURL\", function(url) {\n    NSWorkspace.sharedWorkspace().openURL(NSURL.URLWithString(url));\n  });\n}\n\nfunction validate(symbol) {\n  if (symbol.class() == MSSymbolMaster || symbol.class() == MSSymbolInstance) {\n    return true;\n  } else {\n    context.api().message(\"layer selected is not Symbol 🤔\");\n  }\n  return false;\n}\n\n/*******************Globle variables************************/\nvar copiedSymbols = {}; //Object for dublicate symbols\n\n/*******************Functions************************/\n\n//create New sketch file and ask user for the location of this file\n\nfunction getSymbolsInDocByName(doc) {\n  var docSymbols = doc.localSymbols();\n  var docSymbolsWithNames = {};\n  for (var i = 0; i < docSymbols.count(); i++) {\n    docSymbolsWithNames[docSymbols[i].name()] = docSymbols[i];\n  }\n  return docSymbolsWithNames;\n}\n\nvar idmap = {};\n\nfunction getIdMap(context, localSymbolsByName, foreignSymbolsByName, library) {\n  for (key in localSymbolsByName) {\n    if (foreignSymbolsByName[key] != undefined) {\n      LOG(\"🙃\" + foreignSymbolsByName[key]);\n      LOG(\"🙃\" + foreignSymbolsByName[key].objectID() + library);\n      LOG(\"🙃\" + foreignSymbolsByName[key].symbolID() + library);\n      var foreignSymbol = localSymbolForSymbol_inLibrary(\n        context,\n        foreignSymbolsByName[key],\n        library\n      );\n      LOG(\"🙃\" + foreignSymbol);\n      idmap[localSymbolsByName[key].symbolID()] = foreignSymbol.symbolID();\n    }\n  }\n}\n\nfunction getMatchSymbolInDoc(symbol, docSymbolsWithNames) {\n  if (docSymbolsWithNames[symbol.name()] != undefined) {\n    return docSymbolsWithNames[symbol.name()];\n  }\n  return -1;\n}\n\nfunction AddSymbolToDoc(\n  context,\n  symbol,\n  symbolsInDocByName,\n  doc,\n  library,\n  localDoc\n) {\n  var symbolChildren = symbol.children();\n  var symbolCopy = symbol.copy();\n  localDoc.addSymbolMaster(symbolCopy);\n  for (var i = 0; i < symbolChildren.count(); i++) {\n    if (symbolChildren[i].class() == MSSymbolInstance) {\n      symbolsInDocByName = replaceInstance(\n        context,\n        symbol.children()[i],\n        symbolsInDocByName,\n        library\n      );\n      LOG(symbolChildren[i].symbolMaster() + \"🎉\");\n      var childMaster =\n        symbolsInDocByName[symbolChildren[i].symbolMaster().name()];\n      symbolCopy.children()[i].changeInstanceToSymbol(childMaster);\n    }\n  }\n  symbolCopy.removeFromParent();\n  var frameX = JSON.parse(JSON.stringify(symbol.frame().x()));\n  var frameY = JSON.parse(JSON.stringify(symbol.frame().y()));\n  doc.addSymbolMaster(symbolCopy);\n  symbolsInDocByName[symbolCopy.name()] = symbolCopy;\n  movedSymbolsNumber++;\n  symbolCopy.frame().setX(frameX);\n  symbolCopy.frame().setY(frameY);\n  return symbolsInDocByName;\n}\n\n//add file to libraries\nfunction addDocToLibraries(doc) {\n  //AppController.sharedInstance().librariesController().addAssetLibraryAtURL(doc.fileURL())\n  doc.saveAndAddLibrary();\n}\n\nfunction getAllLibraries() {\n  var userLibraries = AppController.sharedInstance()\n    .librariesController()\n    .libraries();\n  var librariesNameAndReference = [];\n  for (var i = 0; i < userLibraries.count(); i++) {\n    var libraryNameAndReference = {};\n    libraryNameAndReference.value = String(i);\n    libraryNameAndReference.label = String(userLibraries[i].name());\n    libraryNameAndReference.Reference = userLibraries[i];\n    librariesNameAndReference.push(libraryNameAndReference);\n  }\n  return librariesNameAndReference;\n}\n\nfunction replaceInstance(context, symbol, symbolsInDocByName, library) {\n  if (symbol.class() == MSSymbolInstance) {\n    symbol = symbol.symbolMaster();\n  }\n  var symbolID = symbol.symbolID();\n  var symbolName = symbol.name();\n  var librarySymbols = library.document().localSymbols();\n  var symbolInDoc = symbolsInDocByName[symbolName];\n  if (symbolInDoc == undefined) {\n    symbolsInDocByName = addSymbolTolibrary(\n      context,\n      symbol,\n      symbolsInDocByName,\n      library,\n      context.document.documentData()\n    );\n    LOG(movedSymbolsNumber + \" Symbols moved 🤘\");\n    symbolInDoc = symbolsInDocByName[symbolName];\n  }\n  var foriegnSymbol = localSymbolForSymbol_inLibrary(\n    context,\n    symbolInDoc,\n    library\n  );\n  idmap[symbol.symbolID()] = foriegnSymbol.symbolID();\n  reattachAllInstance(context, symbol, foriegnSymbol);\n  symbol.removeFromParent();\n  return symbolsInDocByName;\n}\n\nfunction mapOverrides(symbol1, symbol2) {\n  var overrideMappingID = {};\n  for (var i = 0; i < symbol1.overridePoints().count(); i++) {\n    overrideMappingID = Object.assign(\n      {},\n      overrideMappingID,\n      mapOverrideWithOverridePoints(\n        symbol1.overridePoints()[i],\n        symbol2.overridePoints()[i],\n        {}\n      )\n    );\n  }\n  return overrideMappingID;\n}\n\nfunction mapOverrideWithOverridePoints(overridePoint1, overridePoint2, mapObj) {\n  if (overridePoint1.parent() != null) {\n    mapObj = Object.assign(\n      {},\n      mapObj,\n      mapOverrideWithOverridePoints(\n        overridePoint1.parent(),\n        overridePoint2.parent(),\n        mapObj\n      )\n    );\n  }\n  mapObj[overridePoint1.layerID()] = overridePoint2.layerID();\n  return mapObj;\n}\n\nfunction printIDMaping(idmap) {\n  for (key in idmap) {\n    LOG(\"++====\" + key + \" : \" + idmap[key]);\n  }\n}\n\nvar fileURL = undefined;\nvar foreigndocument = undefined;\nfunction addSymbolTolibrary(\n  context,\n  symbol,\n  symbolsInDocByName,\n  library,\n  localDoc\n) {\n  if (fileURL == undefined) {\n    fileURL = library.locationOnDisk();\n    foreigndocument = MSDocument.new();\n    foreigndocument.readDocumentFromURL_ofType_error(fileURL, \"sketch\", null);\n    foreigndocument.revertToContentsOfURL_ofType_error(fileURL, \"sketch\", null);\n  }\n  symbolsInDocByName = AddSymbolToDoc(\n    context,\n    symbol,\n    symbolsInDocByName,\n    foreigndocument.documentData(),\n    library,\n    localDoc\n  );\n  foreigndocument.writeToURL_ofType_forSaveOperation_originalContentsURL_error_(\n    fileURL,\n    \"com.bohemiancoding.sketch.drawing\",\n    NSSaveOperation,\n    nil,\n    nil\n  );\n  return symbolsInDocByName;\n}\n\nvar movedInstancesNumber = 0;\nvar movedSymbolsNumber = 0;\n\nfunction reattachAllInstance(context, symbol, foreignSymbol) {\n  var Instances = getSymbolInstances(context, symbol);\n  if (Instances != null) {\n    var instanceArray = Instances.allObjects();\n    for (var i = 0; i < instanceArray.count(); i++) {\n      if (instanceArray[i].symbolMaster() == symbol) {\n        // var presentatge = i / Instances.count() * 100;\n        // browserWindow.webContents.executeJavaScript(\n        //   `changeLoading(${presentatge},${JSON.stringify(\n        //     \" Reattaching \" + symbol.name()\n        //   )})`\n        // );\n        // context\n        //   .api()\n        //   .message(\n        //     \"Reconnecting [\" + i + \"/\" + Instances.count() + \"] Instances 🕗\"\n        //   );\n        LOG(\"Reconnecting [\" + i + \"/\" + Instances.count() + \"] Instances 🕗\");\n        idmap = Object.assign(\n          {},\n          idmap,\n          getOverrides(instanceArray[i].symbolMaster(), foreignSymbol)\n        );\n        printIDMaping(idmap);\n        instanceArray[i].changeInstanceToSymbol(foreignSymbol);\n        movedInstancesNumber++;\n      }\n      instanceArray[i].updateOverridesWithObjectIDMap(idmap);\n      //printIDMaping(overrideMapID)\n      //symbol.removeFromParent()\n    }\n  }\n}\n\nfunction getSymbolInstances(context, symbolMaster) {\n  var symbolID = symbolMaster.symbolID();\n  var symbolInstances = context.document\n    .documentData()\n    .symbolInstancesBySymbolID()[symbolID];\n  if (symbolInstances == null) {\n    return null;\n  }\n  var symbolInstancesArray = symbolInstances.allObjects();\n  // var predicate = NSPredicate.predicateWithFormat(\n  //   \"symbolMaster == %@\",\n  //   symbolMaster\n  // );\n  // var instances = symbolInstancesArray.filteredArrayUsingPredicate(predicate);\n\n  // var symbolInstances = NSMutableArray.array();\n\n  // var pages = context.document.pages(),\n  //   pageLoop = pages.objectEnumerator(),\n  //   page;\n\n  // while ((page = pageLoop.nextObject())) {\n  //   var predicate = NSPredicate.predicateWithFormat(\n  //       \"className == 'MSSymbolInstance' && symbolMaster == %@\",\n  //       symbolMaster\n  //     ),\n  //     instances = page.children().filteredArrayUsingPredicate(predicate),\n  //     instanceLoop = instances.objectEnumerator(),\n  //     instance;\n\n  //   while ((instance = instanceLoop.nextObject())) {\n  //     symbolInstances.addObject(instance);\n  //   }\n  // }\n\n  return symbolInstancesArray;\n}\n\nfunction getOverrides(symbolInstance1, symbolInstance2) {\n  var overrides = {};\n  var availableOverrides1 = symbolInstance1.availableOverrides();\n  var availableOverrides2 = symbolInstance2.availableOverrides();\n  overrides = getOverridesforOverridePoints(\n    availableOverrides1,\n    availableOverrides2,\n    overrides\n  );\n  return overrides;\n}\n\nfunction getOverridesforOverridePoints(\n  availableOverrides1,\n  availableOverrides2,\n  overrides\n) {\n  var cacheByLayerName1 = [];\n  var cacheByLayerName2 = [];\n\n  for (var i = 0; i < availableOverrides1.count(); i++) {\n    var layerName = availableOverrides1[i].overridePoint().layerName();\n    cacheByLayerName1[layerName] = availableOverrides1[i];\n    cacheByLayerName2[layerName] = availableOverrides2[i];\n  }\n  for (var i = 0; i < availableOverrides1.count(); i++) {\n    var layerName = availableOverrides1[i].overridePoint().layerName();\n    var availableOverride1 = cacheByLayerName1[layerName];\n    var availableOverride2 = cacheByLayerName2[layerName];\n\n    var overridePoint1 = availableOverride1.overridePoint();\n    if (overridePoint1.isSymbolOverride()) {\n      var symbolOverrides = getOverridesFromSymbolOverride(\n        availableOverride1,\n        availableOverride2,\n        {}\n      );\n      overrides = Object.assign({}, overrides, symbolOverrides);\n    } else {\n      var override1 = availableOverride1.overridePoint().layerID();\n      var override2 = availableOverride2.overridePoint().layerID();\n      overrides[override1] = override2;\n    }\n  }\n  return overrides;\n}\n\nfunction getOverridesFromSymbolOverride(\n  symbolOverride1,\n  symbolOverride2,\n  overrides\n) {\n  var availableOverrides1 = symbolOverride1.children();\n  var availableOverrides2 = symbolOverride2.children();\n  var override1 = symbolOverride1.overridePoint().layerID();\n  var override2 = symbolOverride2.overridePoint().layerID();\n  overrides[override1] = override2;\n  overrides = getOverridesforOverridePoints(\n    availableOverrides1,\n    availableOverrides2,\n    overrides\n  );\n  return overrides;\n}\n\nfunction localSymbolForSymbol_inLibrary(context, symbol, library) {\n  if (MSApplicationMetadata.metadata().appVersion >= 50) {\n    var shareableObjectReference = MSShareableObjectReference.referenceForShareableObject_inLibrary(\n      symbol,\n      library\n    );\n\n    var importedSymbol = AppController.sharedInstance()\n      .librariesController()\n      .importShareableObjectReference_intoDocument(\n        shareableObjectReference,\n        context.document.documentData()\n      );\n  } else {\n    var importedSymbol = AppController.sharedInstance()\n      .librariesController()\n      .importForeignSymbol_fromLibrary_intoDocument_(\n        symbol,\n        library,\n        context.document.documentData()\n      );\n  }\n  return importedSymbol.symbolMaster();\n}\n\nvar debug = false;\nfunction LOG(message) {\n  if (debug) {\n    log(message);\n  }\n}\n"],"sourceRoot":""}